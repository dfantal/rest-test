import org.gradle.api.JavaVersion

plugins {
    id 'java'
}

apply plugin: "maven"
group 'org.example'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    /* JAX-RS */
    compile('org.glassfish.jersey.core:jersey-server:2.28')
    compile('org.glassfish.jersey.containers:jersey-container-jetty-http:2.28')
    compile('org.glassfish.jersey.containers:jersey-container-servlet-core:2.28')
    compile('com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.2.3')
    compile('org.glassfish.jersey.media:jersey-media-json-jackson:2.28')
    compile('org.glassfish.jersey.inject:jersey-hk2:2.28')

    /* Jetty */
    compile('org.eclipse.jetty:jetty-servlet:9.4.20.v20190813')
    compile('org.eclipse.jetty:jetty-server:9.4.20.v20190813')
    compile('org.eclipse.jetty:jetty-util:9.4.20.v20190813')

    /* Utilities */
    compile('io.codecastle.scriptorium:scriptorium-json:1.0.1')

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

def mainClassName = "io.antal.rest.Application";

jar {
    manifest {
        attributes("Main-Class": "$mainClassName")
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it)}
    }

    exclude("META-INF/*.SF", "META-INF/*.DSA", "META-INF/*.RSA")
}
